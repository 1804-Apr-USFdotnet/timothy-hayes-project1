@model LocalGourmet.PL.ViewModels.ReviewsEditVM


@{
    ViewBag.Title = "Edit Review";
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h1>Edit Review</h1>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label class="control-label col-md-2">Restaurant</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Review.RestaurantID, new SelectList(
                       Model.Restaurants,
                       "ID",
                       "Name"))
                </div>
            </div>
    
            @Html.HiddenFor(model => model.Review.ID)
    
            <div class="form-group">
                <label class="control-label col-md-2">Reviewer Name</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Review.ReviewerName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Review.ReviewerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Comment</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Review.Comment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Review.Comment, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <label class="control-label col-md-2">Food Rating (0-5)</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Review.FoodRating, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Review.FoodRating, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <label class="control-label col-md-2">Service Rating (0-5)</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Review.ServiceRating, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Review.ServiceRating, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <label class="control-label col-md-2">Atmosphere Rating (0-5)</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Review.AtmosphereRating, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Review.AtmosphereRating, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <label class="control-label col-md-2">Price Rating (0-5)</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Review.PriceRating, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Review.PriceRating, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group" style="float:right; margin-right: 5px;">
                <input type="submit" value="Save" class="btn btn-default" />
                <a href=@($"/Reviews/Index") class="btn btn-default btn-toolbar">Back to List</a>
            </div>
        </div>
    }
</body>
</html>
